// See DSU approach on dsu section

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        if(nums.empty()) return 0;
        sort(nums.begin(),nums.end());
        int l=1,h=nums.size(),m,ans=1,c;
        book ck;
        while(l<=h)
        {
            m=(l+h)/2;
            c=1;
            ck=0;
            for(int i=1;i<nums.size();i++)
            {
                if(nums[i]==nums[i-1]) continue; // [0,1,1,2]
                if(nums[i]==nums[i-1]+1)
                {
                    c++;
                }
                else {
                    if(c>=m) {ck=1;break;}
                    c=1;
                }
            }
            if(c>=m) ck=1;
            if(ck) ans=m,l=m+1;
            else h=m-1;
        }
        return ans;
    }
};
